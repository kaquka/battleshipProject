/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Database.databaseConnections;
import System.Archivo;
import java.lang.reflect.InvocationTargetException;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author avalo
 */
public class panelMenu extends javax.swing.JPanel {

    /**
     * Creates new form panelMenu
     */
    private static Panel siu;
    private static databaseConnections db;
    
    public panelMenu() {
        
        initComponents();
        siu=new Panel("/icons/menu.png");
        siu.setBounds(0, 0, 800, 600);
        siu.setVisible(true);
        add(siu);
        
        db=new databaseConnections();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        playBtn = new javax.swing.JButton();
        scoreBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jButton1.setText("Score personal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        playBtn.setText("Jugar");
        playBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBtnActionPerformed(evt);
            }
        });

        scoreBtn.setText(" Scores generales");
        scoreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(scoreBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scoreBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(261, 261, 261))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void playBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBtnActionPerformed
        // TODO add your handling code here:DEBE LLEVAR A panelJuego
        
        VentanaJuego.getPnlJuego().setTableroLogico(Archivo.elegirArchivo());
        
        VentanaJuego.getPnlMenu().setVisible(false);
        VentanaJuego.getPnlJuego().setVisible(true);
    }//GEN-LAST:event_playBtnActionPerformed

    private void scoreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreBtnActionPerformed
        // TODO add your handling code here: DEBE LLEVAR A panelScore
        VentanaJuego.getPnlMenu().setVisible(false);
        VentanaJuego.getPnlsScore().setVisible(true);
        
        int numj,PG=0,PP=0;
        
       try{
            DefaultTableModel modelo = new DefaultTableModel();
            VentanaJuego.getPnlsScore().getjTableScores().setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null,rsAux=null;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver").getDeclaredConstructor().newInstance();
            } catch (InstantiationException ex) {
                Logger.getLogger(panelMenu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(panelMenu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalArgumentException ex) {
                Logger.getLogger(panelMenu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvocationTargetException ex) {
                Logger.getLogger(panelMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection conn = DriverManager.getConnection("jdbc:mysql://sql10.freesqldatabase.com:3306/"+"sql10487845", "sql10487845", "Hk79fsHWJJ");
            
            String sql = "SELECT * FROM Jugador";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            int cantidadColumnas = 6;
            
            modelo.addColumn("Nombre");
            modelo.addColumn("Edad");
            modelo.addColumn("Partidas Ganadas");
            modelo.addColumn("Partidas Perdidas");
            modelo.addColumn("Total de Partidas");
            
            while(rs.next()){
                PG=0;
                PP=0;
                
                Object[] filas = new Object[cantidadColumnas];
                
                
                filas[0]=rs.getString(2);//nombre
                //filas[1]=1;
                filas[1]=calcularEdad(ParseFecha(rs.getString(3)));//edad
                
                sql = "SELECT Barcos_hundidos FROM partida WHERE IDJugador = "+rs.getString(1);
                ps = conn.prepareStatement(sql);
                rsAux = ps.executeQuery();
                
                while(rsAux.next()){
                    if(Integer.parseInt(rsAux.getString(1))==10){
                        PG++;
                    }else{
                        PP++;
                    }
                }
                filas[2]=PG;
                filas[3]=PP;
                filas[4]=rs.getString(4);//numero de juegos
                
                
                modelo.addRow(filas);
            }
            
        } catch(SQLException ex) {
            System.err.println(ex.toString());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(panelMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchMethodException ex) {
            Logger.getLogger(panelMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SecurityException ex) {
            Logger.getLogger(panelMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_scoreBtnActionPerformed

    public int calcularEdad(Date fecha){
        Period edad = Period.between(fecha.toLocalDate(), LocalDate.now());
        return edad.getYears();
    }
    
    public static Date ParseFecha(String fecha)
    {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;
        try {
            fechaDate = (Date) formato.parse(fecha);
            return fechaDate;
        } 
        catch (ParseException ex) 
        {
            System.out.println(ex);
        }
        return fechaDate;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        VentanaJuego.getPnlScorePersonal().getAreatxtScore().setText(
                db.mostrarScore(VentanaJuego.getJugador().getNombre(),
                        sdf.format(VentanaJuego.getJugador().getFechaNacimiento()),
                        VentanaJuego.getJugador().getEdad(),VentanaJuego.getJugador().getId()));
        
        VentanaJuego.getPnlMenu().setVisible(false);
        VentanaJuego.getPnlScorePersonal().setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton playBtn;
    private javax.swing.JButton scoreBtn;
    // End of variables declaration//GEN-END:variables
}
